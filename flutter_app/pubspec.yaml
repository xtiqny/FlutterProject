name: flutter_app
description: A new Flutter application.

# The following defines the version and build number for your application.
# A version number is three numbers separated by dots, like 1.2.43
# followed by an optional build number separated by a +.
# Both the version and the builder number may be overridden in flutter
# build by specifying --build-name and --build-number, respectively.
# In Android, build-name is used as versionName while build-number used as versionCode.
# Read more about Android versioning at https://developer.android.com/studio/publish/versioning
# In iOS, build-name is used as CFBundleShortVersionString while build-number used as CFBundleVersion.
# Read more about iOS versioning at
# https://developer.apple.com/library/archive/documentation/General/Reference/InfoPlistKeyReference/Articles/CoreFoundationKeys.html
version: 1.0.0+1

environment:
  sdk: ">=2.1.0 <3.0.0"

dependencies:
  flutter:
    sdk: flutter
  #添加工程依赖库
  #官方相机库
  camera: ^0.5.8+2
  #路由导航
  fluro: ^1.6.3
  #网络状态库
  connectivity: ^0.4.3
  #国际化本地化
  intl: ^0.16.1
  #获取本地文件
  path_provider: ^1.6.11
  #视频播放 于在Android和iOS上与其他Flutter窗口小部件一起显示内嵌视频
  video_player: ^0.10.11+2
  #用于读写简单键值对的Flutter插件。包装iOS上的NSUserDefaults和Android上的SharedPreferences。
  shared_preferences: ^0.5.8
  #SQLite的Flutter插件，一个自包含的高可靠性嵌入式SQL数据库引擎
  sqflite: ^1.3.0
  #设备信息
  device_info: ^0.4.2+4
  #蓝牙
  flutter_blue: ^0.7.2
  #用于Android和ios的toast库
  fluttertoast: ^7.0.1+1
  #Dart的一个强大的Http客户端，支持拦截器、全局配置、FormData、请求取消、文件下载、超时等。
  dio: ^3.0.9

  #辅助库
  #RxDart是一种基于ReactiveX的谷歌Dart反应性函数编程库。谷歌Dart自带了一个非常不错的流API;RxDart没有尝试提供这个API的替代方案，而是在它上面添加了一些功能。
  rxdart: ^0.24.1
  #rx_widgets是一个包含基于流的Flutter Widgets和Widget帮助程序/便利类的程序包，它们有助于反应式编程风格，特别是与RxDart和RxCommands结合使用。
  rx_widgets: ^3.0.0

  #引入自定义的库
  cn21base:
    path: ./dependencies/cn21base
  unirouter:
    path: ./dependencies/unirouter
  robust_image:
    path: ./dependencies/robust_image
  restfulapi:
    path: ./dependencies/restfulapi

  # The following adds the Cupertino Icons font to your application.
  # Use with the CupertinoIcons class for iOS style icons.
  cupertino_icons: ^0.1.2

dev_dependencies:
  flutter_test:
    sdk: flutter
  build_runner: ^1.3.1
  restfulapi_generator:
    path: ./dependencies/restfulapi/restfulapi_generator

# For information on the generic Dart part of this file, see the
# following page: https://dart.dev/tools/pub/pubspec

# The following section is specific to Flutter.
flutter:

  # The following line ensures that the Material Icons font is
  # included with your application, so that you can use the icons in
  # the material Icons class.
  uses-material-design: true

  # To add assets to your application, add an assets section, like this:
  # assets:
  #  - images/a_dot_burr.jpeg
  #  - images/a_dot_ham.jpeg

  # An image asset can refer to one or more resolution-specific "variants", see
  # https://flutter.dev/assets-and-images/#resolution-aware.

  # For details regarding adding assets from package dependencies, see
  # https://flutter.dev/assets-and-images/#from-packages

  # To add custom fonts to your application, add a fonts section here,
  # in this "flutter" section. Each entry in this list should have a
  # "family" key with the font family name, and a "fonts" key with a
  # list giving the asset and other descriptors for the font. For
  # example:
  # fonts:
  #   - family: Schyler
  #     fonts:
  #       - asset: fonts/Schyler-Regular.ttf
  #       - asset: fonts/Schyler-Italic.ttf
  #         style: italic
  #   - family: Trajan Pro
  #     fonts:
  #       - asset: fonts/TrajanPro.ttf
  #       - asset: fonts/TrajanPro_Bold.ttf
  #         weight: 700
  #
  # For details regarding fonts from package dependencies,
  # see https://flutter.dev/custom-fonts/#from-packages
  module:
    androidPackage: com.example.flutterapp
    iosBundleIdentifier: com.example.flutterapp